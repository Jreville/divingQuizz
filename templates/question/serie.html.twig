{% extends 'base.html.twig' %}

{% block title %}Questions N4{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        body {
            font-family: 'Roboto', sans-serif; /* Utilisation de la police Roboto */
            background-color: #f0f0f0;
            padding: 20px;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        @media(min-width: 500px) {
            body {
                font-size: 1.75em;
            }
           
        }
        h1 {
            color: #333;
            text-align: center;
        }
        .button-container {
            text-align: center;
            margin-top: 20px;
        }
        .button {
            display: block;
            width: 300px;
            padding: 20px;
            font-size: 20px;
            font-weight: bold;
            text-transform: uppercase;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background-color 0.3s;
            margin-bottom: 10px;
            text-decoration: none;
            text-align: center;
        }
        .button:hover {
            background-color: #0056b3;
        }
        /* Nouveau style pour le contenu des questions */
        .question-content {
            margin-top: 20px;
            padding: 10px;
            color: #007bff;
            font-weight: bold;
        }
        /* Style pour les listes à puce */
        .question-content ul {
            margin: 0;
            padding-left: 20px;
            text-align: left;
        }
        .question-content ul li {
            margin-bottom: 10px;
            /* Autres styles... */
        }
        
        .previous.laptop {
            display: block;
        }
        .previous.mobile {
            display: none;
        }

.question-content ul ul {
    margin-top: 0;
    padding-left: 20px;
    list-style-type: none; /* Supprimer les puces */
}

.question-content ul ul li {
    margin-bottom: 5px;
    position: relative;
    padding-left: 30px; /* Ajouter de l'espace pour les puces */
}

.question-content ul ul li::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: #007bff; /* Couleur des puces */
}

        /* Style du bouton "Afficher/Masquer" */
        .toggleButton {
            display: inline-block;
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            text-transform: uppercase;
            background-color: red;
            color: #fff;
            border: 2px solid red; /* Bordure */
            border-radius: 50%; /* Bordure arrondie pour créer un bouton rond */
            cursor: pointer;
            transition: background-color 0.3s;
            margin-top: 10px;
            text-decoration: none;
        }
        .toggleButton:hover {
            background-color: lightcoral;
            border: 2px solid lightcoral;
        }
        .toggleButton::after {
            content: "?"; /* Contenu du bouton "Afficher/Masquer" */
        }
        .panel {
            margin-bottom: 20px;
        }
        .link {
            margin-top: 20px;
            font-size: 12px;
            color: black;
        }
        
        

@media(max-width: 1000px) {
    .question-content .link {
        font-size: 35px;
    }
    
    .panel {
        margin-top: 222px;
    }
    
    .reduce-mode {
        height: 10em !important;
    }
    .answer-container, .question-container {
        height: 20em;
        overflow: hidden;
    }
    .panel h1 {
        position: fixed;
        top: 0;
        background-color: lightblue;
        margin: 0 auto;
        left: 18%;
        padding: 50px;
        font-size: 80px;
    }
    .panel .bouton-precedent {
        position: fixed;
        top: 0;
        left: 0;
        padding: 45px;
        font-size: 90px;
        text-decoration: none;
        background-color: lightgray;
    }
    
    #btn_next,#btn_end.button {
        position: fixed;
        bottom: 0;
        font-size: 1.75em;
        width: 100%;
        left: 0;
        padding: 70px 0px;
    }
    .question-box, .answer-box {
        font-size: 4em;
    }
    
    body {
        display: block;
    }
    
    .toggleButton {
            position: fixed;
    padding: 0.5em 0.75em;
    font-size: 10em;
    left: 20%;
    top: 50%;
    }
    
    .previous.laptop {
            display: none;
        }
        .previous.mobile {
            display: block;
        }
}
 
    

@media(max-width: 1000px) and (orientation: landscape) {
    .button-container {
        text-align: center;
        margin-top: 0;
    }
    
    
    .question-content .link {
        font-size: 20px;
    }
    
    .panel {
        margin-top: 80px;
    }
    
    .answer-container, .question-container {
        height: 8em;
        overflow: hidden;
    }
     
    .panel h1 {
        position: fixed;
        top: 0;
        background-color: lightblue;
        margin: 0 auto;
        left: 40%;
        padding: 20px;
        font-size: 20px;
    }
    .panel .bouton-precedent {
        position: fixed;
    top: 0;
    left: 0;
    padding: 10px 40px;
    font-size: 40px;
    text-decoration: none;
    background-color: lightgray;
    }
    
    #btn_next,#btn_end.button {
        position: fixed;
        bottom: 0;
        font-size: 1em;
        width: 100%;
        left: 0;
        padding: 20px 0px;
    }
    .question-box, .answer-box {
        font-size: 4em;
    }
    
    body {
        display: block;
        overflow: hidden;
        padding: 0;
        margin: 0;
    }
    
    .toggleButton {
       position: fixed;
    top: -10px;
    left: 80%;
    padding: 10px 40px;
    font-size: 40px;
    text-decoration: none;
    background-color: red;
    border-radius: 0;

    }
    .previous.laptop {
            display: none;
        }
        .previous.mobile {
            display: block;
        }
}    
    
    </style>
{% endblock %}

{% block body %}
    <div class="button-container">
        {% for key, question in serie %}
            {% set key = key + 1  %}
            <div class="panel" id="panel_{{ key }}"{% if key != 1 %} style="display:none" {% endif %}>
                {% if key != 1 %}<a href="#" class="mobile previous bouton-precedent">&lt;</a>{% endif %}
                {% if key != 1 %}<a href="#" class="laptop previous bouton-precedent">Retour</a>{% endif %}
                <h1>Question {{ key }}/10</h1>
                <div class="question-container" id="qc_{{ key }}">
                    <div class="question-box">
                {% if question.label starts with 'http://' or question.label starts with 'https://' %}
                       <img style="    text-align: center;
    max-width: 500px;
    display: block;
    margin: auto;" src="{{ question.label }}" />
                {% else %}
                        <span class="answer-off">{{ question.label }}</span>
                        <p class="answer-on" style="font-size: 0.5em; display: none" >{{ question.label }}</p>
                {% endif %}
                    </div>
                </div>
                <button class="toggleButton" id="toggleButton_{{ key }}" data-role="content_{{ key }}"></button>
                <div class="answer-container" id="content_{{ key }}" style="display: none;">
                    <div class="answer-box">
                        <div class="question-content">
                            {{ question.answer | raw }}
                            <a class="link" target="_blank" href="{{ path('admin_question_edit',  {'id':  question.id }) }}">La réponse est mauvaise/incomplète</a>
                        </div>
                    </div>
                </div>
            </div>
        {% endfor %}
        <a href="#" id="btn_next" class="button next" style="margin: auto;">Question suivante</a>
        <a href="{{ path('home') }}" id="btn_end" class="button next" style="margin: auto; display:none">Fin</a>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            
            function isLandscape() {
                console.log($(window).width());
                console.log($(window).height());
                return $(window).width() > $(window).height();
            }
             
  // Fonction pour ajuster la taille de la police en fonction de la hauteur de la div
  function ajusterTaillePolice(container, box) {
      console.log(container);
    var panelId = container.attr('id');

    var texteDiv = $('#'+panelId+' '+box);
    var containerHeight = container.height();
    
    var texteHeight = texteDiv.outerHeight();
    var fontSize = parseInt(texteDiv.css('font-size'));
    
    // Si la hauteur du texte dépasse la hauteur de la div, réduire la taille de la police
    console.log(texteHeight + ' ' + containerHeight );
    if (texteHeight > containerHeight) {
      texteDiv.css('font-size', (fontSize - 1) + 'px'); // Réduire la taille de la police
      ajusterTaillePolice(container, box); // Appeler récursivement jusqu'à ce que la taille soit adaptée
    }
  }
  
  $('.question-container').each( function() {
      ajusterTaillePolice($(this), '.question-box');
  });
  
  $('.answer-container').each( function() {
     ajusterTaillePolice($(this), '.answer-box');
  });
  console.log('------------------------------------------')
  
            $(".toggleButton").click(function() {
                var content = $(this).data("role");
                var element = $('#' + content);
                element.toggle();
                $(this).hide();
                questionContainer = element.siblings('.question-container');   
                questionBox = questionContainer.children('.question-box');
                questionBox.children('.answer-off').hide();
                questionBox.children('.answer-on').show();
                ajusterTaillePolice(element, '.question-box');
                ajusterTaillePolice(element, '.answer-box');
                questionContainer.addClass('reduce-mode');
                
                
                 if ($(this).siblings('img').length > 0) {
                     $(this).siblings('img').toggle();
                 }
            });
            $(".next").click(function() {
                var toggle = false;
                for (var i = 1; i <= 10; i++) {
                    var element = $('#panel_' + i);
                    if (element.is(":visible")) {
                        toggle = true;
                        element.hide();
                    } else if (element.is(":hidden") && toggle) {
                        element.show();
                        toggle = false;
                        if (i == 10) {
                            $('#btn_next').hide();
                            $('#btn_end').show();
                        }
                    }
                    console.log(element);
                    ajusterTaillePolice(element, '.question-box');
                }
                
                
            });
            
            $(".previous").click(function() {
                var toggle = false;
                for (var i = 10; i >= 1; i--) {
                    var element = $('#panel_' + i);
                    if (element.is(":visible")) {
                        toggle = true;
                        element.hide();
                    } else if (element.is(":hidden") && toggle) {
                        element.show();
                        toggle = false;
                        if (i == 10) {
                            $('#btn_next').hide();
                            $('#btn_end').show();
                        }
                    }
                    console.log(element);
                    ajusterTaillePolice(element, '.question-box');
                }
                
                
            });
        });
    </script>
{% endblock %}
